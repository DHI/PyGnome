stages:
  - compile
  - test
  - build

cache:
  paths:
    - ./envs

before_script:
  - source activate ./envs

configure_env:
  stage: .pre
  image: registry.orr.noaa.gov/erd/centos-conda/centos7-python3
  before_script:
    - echo '' # manual override of before_script because we're on runner 12.3 and inherit options are only 12.9+
  script:
    - conda create --prefix ./envs
  tags:
    - docker
  artifacts:
    expire_in: 5 days
    paths:
      - ./envs

test:
  stage: test
  except:
    - production
    - master
    - py23
  image: registry.orr.noaa.gov/gnome/oillibrary:develop
  script:
    - yum install gcc gcc-c++ -y
    - yum install netcdf-devel -y # needed by the C++ code -- it can't find the conda versions
    # we're shouldn't need matplotlib for tests or deployment ...
    - yum install libXext libSM libXrender -y  # needed by matplotlib on CentOS

    # install the requirements
    - conda install --file conda_requirements.txt

    - cd ./py_gnome
    - python ./setup.py install
    - cd tests/unit_tests && pytest

  tags:
    - docker

python3_compile:
  stage: compile
  only:
    - py23
  image: registry.orr.noaa.gov/erd/centos-conda/centos7-python3
  script:
    - yum install gcc gcc-c++ make -y
#    - yum install netcdf-devel -y
    - yum install libXext libSM libXrender -y
    - conda install --file conda_requirements_py3.txt
    - cd ./py_gnome
    - python ./setup.py develop
    - python -c "import gnome"
    - cd documentation && make html
  tags:
    - docker
  artifacts:
    when: always
    expire_in: 5 days
    paths:
      - ./envs
      - ./py_gnome/documentation/_build/html

python3_test:
  stage: test
  allow_failure: true
  image: registry.orr.noaa.gov/erd/centos-conda/centos7-python3
  only:
    - py23
  script:
    - cd ./py_gnome/tests/unit_tests && pytest
  tags:
    - docker

build_docs:
  stage: build
  before_script:
    - echo '' # manual override of before_script because we're on runner 12.3 and inherit options are only 12.9+
  only:
    - py23
  script:
    - docker build -f dockerfile-docs ./py_gnome/documentation/_build/html -t registry.orr.noaa.gov/gnome/pygnome/docs
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push registry.orr.noaa.gov/gnome/pygnome/docs
  tags:
    - shell
    - build

test_master:
  stage: test
  only:
  - master
  image: registry.orr.noaa.gov/gnome/oillibrary:master
  script:
    - yum install gcc gcc-c++ -y
    - yum install netcdf-devel -y # needed by the C++ code -- it can't find the conda versions
    # we're shouldn't need matplotlib for tests or deployment ...
    - yum install libXext libSM libXrender -y  # needed by matplotlib on CentOS

    # install the requirements
    - conda install --file conda_requirements.txt

    - cd ./py_gnome
    - python ./setup.py install
    - cd tests/unit_tests && pytest

  tags:
    - docker

test_production:
  stage: test
  only:
  - production
  image: registry.orr.noaa.gov/gnome/oillibrary:production
  script:
    - yum install gcc gcc-c++ -y
    - yum install netcdf-devel -y # needed by the C++ code -- it can't find the conda versions
    # we're shouldn't need matplotlib for tests or deployment ...
    - yum install libXext libSM libXrender -y  # needed by matplotlib on CentOS

    # install the requirements
    - conda install --file conda_requirements.txt

    - cd ./py_gnome
    - python ./setup.py install
    - cd tests/unit_tests && pytest

  tags:
    - docker

develop:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull registry.orr.noaa.gov/gnome/oillibrary:develop
    - docker tag registry.orr.noaa.gov/gnome/oillibrary:develop oillibrary
    - docker build -f dockerfile . -t registry.orr.noaa.gov/gnome/pygnome:develop
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push registry.orr.noaa.gov/gnome/pygnome:develop
  only:
    - develop
  tags:
    - shell
    - build

master:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull registry.orr.noaa.gov/gnome/oillibrary:master
    - docker tag registry.orr.noaa.gov/gnome/oillibrary:master oillibrary
    - docker build -f dockerfile . -t registry.orr.noaa.gov/gnome/pygnome:master
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push registry.orr.noaa.gov/gnome/pygnome:master
  only:
     - master
  tags:
     - shell
     - build

production:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull registry.orr.noaa.gov/gnome/oillibrary:production
    - docker tag registry.orr.noaa.gov/gnome/oillibrary:production oillibrary
    - docker build -f dockerfile . -t registry.orr.noaa.gov/gnome/pygnome:production
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push registry.orr.noaa.gov/gnome/pygnome:production
  only:
     - production
  tags:
     - shell
     - build